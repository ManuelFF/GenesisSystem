/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ZTestingPackage;

import ModuleWorker.IC.MWCON;
import ModuleWorker.IC.NANOCON_Asistencia;
import ModuleWorker.SYSAUDIOCON;
import ModuleWorker.SYSControl;
import ModuleWorker.View.JFRPrincipal;
import java.util.concurrent.TimeUnit;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author USUARIO
 */
public class JDCalc_Horas extends javax.swing.JDialog 
{
        SYSAUDIOCON sysau = new SYSAUDIOCON();

    /**
     * Creates new form JDCalc_Horas
     */
    public JDCalc_Horas(java.awt.Frame parent, boolean modal) 
    {
        super(parent, modal);
        initComponents();
    }

    private void control_impl()
    {
        SYSControl con = new SYSControl();
        if(con.comprobar()==1)
        {
            JOptionPane.showMessageDialog(this, "SISTEMA EN EJECUCION");
            int opc = JOptionPane.showConfirmDialog(this,"RECUPERAR?");

            if(opc == 0 )
            {
                con.write("2");
            }else
                {
                  System.exit(0);
                }
        }

        if(con.comprobar()==3)
        {
            JOptionPane.showMessageDialog(this, "SISTEMA LANZADO");
        }
        
        if(con.comprobar()==0)
        {
            JOptionPane.showMessageDialog(this, "ERROR CRITICO");
        }

        if(con.comprobar()==2)
        {
            JOptionPane.showMessageDialog(this, "SISTEMA RECUPERADO");
        }
            
    }
    
    
    //METODOS ESPECIALES DE REGISTRO DE SALIDA
    
    private int CT(int h,int m)
    {
        int HH = h*3600;
        int mm = m*60;
        int t = HH+mm;
        return t;
    }
    
    private String comprt(int CT1,int CT2)
    {
        if(CT1 == CT2)
        {
           return "0";  
        }else
            {
                int result = CT1-CT2;
                return "Ha trabajado : "+(Math.abs(result)/60)+" Minutos "+"("+FMF(Math.abs(result)/60)+" Horas)";
                
            }
    }
    
    private String comprt_salida(int HS,int HSO,int CT1,int CT2)
    {
        
        if(HS == HSO)
        {
            return "NO";
        }else
            if(HS>HSO)
            {
                int result = CT1-CT2;
                
                return "Ha trabajado horas extra : "+hora_extra(Math.abs(result)/60);
            }else
                if(HS<HSO)
                {
                    return "SI";
                }
        return "NULL";
    }
    
    private String hora_extra(int m)
    {
        int HOT = 9;
        int HT = m/60;
        
        if(HOT == HT)
        {
            return "0";
        }else
            if(HT>HOT)
            {
                return ""+(HT-HOT);
            }else
                if(HT<HOT)
                {
                    return "0";
                }
        System.out.println(HT);
        return "NULL";
    }
    
    public String FMF(int minutos) 
    {
        String formato = "%02d:%02d";
        long horasReales = TimeUnit.MINUTES.toHours(minutos);
        long minutosReales = TimeUnit.MINUTES.toMinutes(minutos) - TimeUnit.HOURS.toMinutes(TimeUnit.MINUTES.toHours(minutos));
        return String.format(formato, horasReales, minutosReales);
    }
     
    
    //FIN METODOS ESPECIALES DE REGISTRO DE SALIDA
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        heoH = new javax.swing.JTextField();
        heoM = new javax.swing.JTextField();
        heH = new javax.swing.JTextField();
        heM = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("CALCULADORA DE HORAS _ PRUEBAS");

        jLabel2.setText("Horas - Minutos -> Original ");

        jLabel3.setText("Horas - Minutos -> Next ");

        heoH.setText("Hora");

        heoM.setText("minuto");

        heH.setText("Hora");

        heM.setText("minuto");

        jButton1.setText("Horas Retrasadas");

        jButton2.setText("Hora Trabajadas");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Otras Acciones");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(heoH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(heoM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(heH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(heM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(heoH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(heoM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(heH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(heM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addContainerGap(145, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
//
//        SYSControl con = new SYSControl();
//        con.Close_System();

        sysau.E_ERROR();
            
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

//        SYSControl con = new SYSControl();
//        con.deleteTMP();


    try 
    {
        JFrame jf=new JFrame();
        jf.setAlwaysOnTop(true);


        //hs -> HORA SALIDA

        //SEGUNDA SITUACION
        int hsH = 18;
        int hsM = 00;
//###################################################        
        //he -> HORA ENTRADA
        
        //SEGUNDA SITUACION
        int heH = 9;
        int heM = 10;
        
        //hso -> Hora Salida ORIGINAL
        int hso = 17;

        //FORMULA = R= comprt(HORA_SALIDA,HORA_ENTRADA);
        String r = comprt(CT(hsH, hsM), CT(heH, heM));

        System.out.println(r);

        //Salida temprano
        //FORMULA = ST = comprt(HORA SALIDA ,HORA SALIDA ORIGINAL,HORAS TRABAJADAS);
        String ST = comprt_salida(hsH,hso,CT(hsH, hsM), CT(heH, heM));
        System.out.println(ST);

    } catch (Exception e) 
        {
            System.err.println(e);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDCalc_Horas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDCalc_Horas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDCalc_Horas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDCalc_Horas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDCalc_Horas dialog = new JDCalc_Horas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField heH;
    private javax.swing.JTextField heM;
    private javax.swing.JTextField heoH;
    private javax.swing.JTextField heoM;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
